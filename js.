import OpenAI from "openai";

export default async function handler(req, res) {
  // Autorise ton front (Pages / domaine custom) Ã  appeler l'API
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  if (req.method === "OPTIONS") return res.status(200).end();
  if (req.method !== "POST") {
    return res.status(405).json({ error: "MÃ©thode non autorisÃ©e" });
  }

  try {
    const { message, language } = req.body || {};
    if (!message || typeof message !== "string") {
      return res.status(400).json({ error: "Message manquant" });
    }

    const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

    // ModÃ¨le rapide, naturel et Ã©conomique. Possible dâ€™utiliser gpt-4-turbo aussi.
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content:
            `Tu es Eumonia, un tuteur dâ€™anglais amical et motivant. ` +
            `RÃ©ponds de faÃ§on claire, concise et pÃ©dagogique en ${language || "franÃ§ais"}.`
        },
        { role: "user", content: message }
      ],
      temperature: 0.8
    });

    const reply = completion.choices?.[0]?.message?.content?.trim() || "Je nâ€™ai pas compris. Reformule ta question ðŸ˜Š";
    return res.status(200).json({ reply });
  } catch (err) {
    console.error("Erreur OpenAI:", err);
    return res.status(500).json({ error: "Erreur API OpenAI" });
  }
}
